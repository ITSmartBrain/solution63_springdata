package solution;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/*
Часть 1: Стандартные методы репозитория
1. Реализовать базовые CRUD операции
2. Добавить проверку существования товара по имени
3. Реализовать подсчет товаров по категории

Часть 2: Named Query методы
1. Найти все активные товары в указанной категории
2. Найти товары с ценой в заданном диапазоне
3. Найти топ-3 самых дорогих товара
4. Обновить количество товара по ID
5. Посчитать среднюю цену по категориям

Часть 3: Дополнительное задание
1. Реализовать метод для поиска товаров по нескольким категориям
Подсказка: метод должен принимать List<String> categories
2. Создать метод для частичного обновления товара (например, только цены и количества)
3. Реализовать пагинацию для метода поиска активных товаров
Объяснение задания:
Представьте, что у нас в базе 10 000 активных товаров.
В этом случае запрос, который ищет активные товары вернет сразу все 10 000 записей, что очень не эффективно.
В таких случаях используется разбиение результата на несколько кусков (страниц) по n записей на странице.
Например, 100 страниц по 100 записей.
Такой процесс называется пагинацией.
Подсказка: Погуглите про Pageable

Часть 4:
1. Написать Интерфейс ProductService и его реализацию ProductServiceImpl
2. Написать контроллер ProductController
 */
@SpringBootApplication
public class Application {
    public static void main(String[] args) {
        SpringApplication.run(Application.class);
    }
}

